version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: inflow_mysql
    environment:
      MYSQL_ROOT_PASSWORD: mysql123
      MYSQL_DATABASE: inflow_db
      MYSQL_USER: inflow_user
      MYSQL_PASSWORD: inflow123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema_mysql.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seed_mysql.sql:/docker-entrypoint-initdb.d/02-seed.sql
    networks:
      - inflow_network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pmysql123"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: inflow_backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: inflow_db
      DB_USER: root
      DB_PASSWORD: mysql123
      JWT_SECRET: your_super_secret_jwt_key_here_change_in_production
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_EXPIRES_IN: 7d
      CORS_ORIGIN: http://localhost:3000
      CORS_CREDENTIALS: true
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX: 100
      API_DOCS_ENABLED: true
      API_BASE_URL: http://localhost:3001
      LOG_LEVEL: info
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - inflow_network
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: inflow_frontend
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      GENERATE_SOURCEMAP: false
      SKIP_PREFLIGHT_CHECK: true
      WDS_SOCKET_HOST: 0.0.0.0
      WDS_SOCKET_PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - inflow_network
    command: npm start

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: inflow_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - inflow_network
    profiles:
      - production

volumes:
  mysql_data:

networks:
  inflow_network:
    driver: bridge